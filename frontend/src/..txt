const handleInputChange = (fieldId, value) => {
  setFormData(prevData => ({
    ...prevData,
    [fieldId]: value
  }));
  setSelectedTemplate(prev => {
    if (!prev) return prev;
    return {
      ...prev,
      fields: (prev.fields || []).map(group => ({
        ...group,
        fields: (group.fields || []).map(field =>
          field.id === fieldId ? { ...field, value } : field
        )
      }))
    };
  });
};

const handleCheckboxChange = (fieldId, newValue) => {
  setSelectedTemplate(prev => {
    if (!prev) return prev;
    return {
      ...prev,
      fields: (prev.fields || []).map(group => ({
        ...group,
        fields: (group.fields || []).map(field =>
          field.id === fieldId ? { ...field, cB: newValue } : field
        )
      }))
    };
  });
};
